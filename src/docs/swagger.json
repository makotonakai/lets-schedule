{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/": {
            "get": {
                "description": "Return \"Accessible\" when the api server is alive",
                "tags": [
                    "handler"
                ],
                "summary": "Return \"Accessible\" when the api server is alive",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "get": {
                "description": "Generate a authorization token if the login becomes successful",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "handler"
                ],
                "summary": "Generate a authorization token if the login becomes successful",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Credential"
                        }
                    },
                    "401": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/restricted": {
            "get": {
                "description": "Return a greeting if the given token is valid",
                "tags": [
                    "handler"
                ],
                "summary": "Return a greeting if the given token is valid",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/restricted/candidate_times/available-time/{meeting_id}": {
            "get": {
                "description": "Get an available time by meeting id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get an available time by meeting id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CandidateTime"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an available time by meeting id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update an available time by meeting id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CandidateTime"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/restricted/candidate_times/meeting/{meeting_id}": {
            "get": {
                "description": "Get a CandidateTimeWithUserName by meeting id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a CandidateTimeWithUserName by meeting id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CandidateTimeWithUserName"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/restricted/candidate_times/new": {
            "post": {
                "description": "Create a new candidate time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new candidate time",
                "parameters": [
                    {
                        "description": "Details of candidate time",
                        "name": "meeting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CandidateTime"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CandidateTime"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/restricted/candidate_times/user/{user_id}/meeting/{meeting_id}": {
            "get": {
                "description": "Get a candidate time by user id and meeting id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a candidate time by user id and meeting id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CandidateTime"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a candidate time by user id and meeting id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a candidate time by user id and meeting id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CandidateTime"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/restricted/meetings/user/{user_id}": {
            "get": {
                "description": "Get meetings by user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meetings"
                ],
                "summary": "Get meetings by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/restricted/meetings/{id}": {
            "get": {
                "description": "Get meetings by meeting id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meetings"
                ],
                "summary": "Get meetings by meeting id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/restricted/participants/meeting/{meeting_id}": {
            "get": {
                "description": "Get participant by meeting id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Get participant by meeting id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ParticipantWithUserName"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update participant by meeting id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Update participant by meeting id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ParticipantWithUserName"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/restricted/participants/new": {
            "post": {
                "description": "Create participants and other details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Create new participants",
                "parameters": [
                    {
                        "description": "List of ParticipantWithUserName",
                        "name": "participant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParticipantWithUserName"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ParticipantWithUserName"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/restricted/signup": {
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "Details of candidate time",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/send-email": {
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "Details of email address",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EmailAddress"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.EmailAddress"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/signup": {
            "post": {
                "description": "Create a new meeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meetings"
                ],
                "summary": "Create a new meeting",
                "parameters": [
                    {
                        "description": "Meeting details",
                        "name": "meeting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/meetings/guest/confirmed/{user_id}": {
            "get": {
                "description": "Get meetings that are not responded by host by user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meetings"
                ],
                "summary": "Get meetings that are confirmed by guest by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/meetings/guest/not-confirmed/{user_id}": {
            "get": {
                "description": "Get meetings that are not confirmed by guest by user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meetings"
                ],
                "summary": "Get meetings that are not confirmed by guest by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/meetings/guest/not-responded/{user_id}": {
            "get": {
                "description": "Get meetings that are not responded by guest by user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meetings"
                ],
                "summary": "Get meetings that are not responded by guest by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/meetings/host/confirmed/{user_id}": {
            "get": {
                "description": "Get meetings that are confirmed for host by user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meetings"
                ],
                "summary": "Get meetings that are confirmed for host by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/meetings/host/not-confirmed/{user_id}": {
            "get": {
                "description": "Get meetings that are not confirmed for host by user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meetings"
                ],
                "summary": "Get meetings that are not confirmed for host by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/meetings/host/not-responded/{user_id}": {
            "get": {
                "description": "Get meetings that are not responded by host by user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meetings"
                ],
                "summary": "Get meetings that are not responded by host by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/meetings/{id}": {
            "put": {
                "description": "Update meeting by meeting id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meetings"
                ],
                "summary": "Update meeting by meeting id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{id}/reset-password": {
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New password",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.Credential": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "models.CandidateTime": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "meeting_id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.CandidateTimeWithUserName": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "meeting_id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "models.EmailAddress": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string"
                }
            }
        },
        "models.Meeting": {
            "type": "object",
            "properties": {
                "actual_end_time": {
                    "type": "string"
                },
                "actual_start_time": {
                    "type": "string"
                },
                "all_participants_responded": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "hour": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_confirmed": {
                    "type": "boolean"
                },
                "is_online": {
                    "type": "boolean"
                },
                "is_onsite": {
                    "type": "boolean"
                },
                "place": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.ParticipantWithUserName": {
            "type": "object",
            "properties": {
                "has_responded": {
                    "type": "boolean"
                },
                "is_host": {
                    "type": "boolean"
                },
                "meeting_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "can_login": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        }
    }
}